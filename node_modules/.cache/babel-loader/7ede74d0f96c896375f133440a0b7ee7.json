{"ast":null,"code":"import axios from \"axios\";\nvar BASE_URL = 'https://mock-api.bootcamp.respondeai.com.br/api/v3/linkr';\n\nfunction createHeaders(token) {\n  var config = {\n    headers: {\n      Authorization: \"Bearer \".concat(token)\n    }\n  };\n  return config;\n}\n\nfunction signUp(body) {\n  var promise = axios.post(\"\".concat(BASE_URL, \"/sign-up\"), body);\n  return promise;\n}\n\nfunction login(body) {\n  var promise = axios.post(\"\".concat(BASE_URL, \"/sign-in\"), body);\n  return promise;\n}\n\nfunction createPost(_ref) {\n  var token = _ref.token,\n      body = _ref.body;\n  var config = createHeaders(token);\n  var promise = axios.post(\"\".concat(BASE_URL, \"/posts\"), body, config);\n  return promise;\n}\n\nfunction getMylikes(token) {\n  var config = createHeaders(token);\n  var promise = axios.get(\"\".concat(BASE_URL, \"/posts/liked\"), config);\n  return promise;\n}\n\nfunction deletePost(token, id) {\n  var config = createHeaders(token);\n  var promise = axios.delete(\"\".concat(BASE_URL, \"/posts/\").concat(id), config);\n  return promise;\n}\n\nfunction getUserPosts(_ref2) {\n  var token = _ref2.token,\n      userId = _ref2.userId;\n  var config = createHeaders(token);\n  var promise = axios.get(\"\".concat(BASE_URL, \"/users/\").concat(userId, \"/posts\"), config);\n  return promise;\n}\n\nfunction getUserInfos(_ref3) {\n  var token = _ref3.token,\n      userId = _ref3.userId;\n  var config = createHeaders(token);\n  var promise = axios.get(\"\".concat(BASE_URL, \"/users/\").concat(userId), config);\n  return promise;\n}\n\nfunction getHashtag(_ref4) {\n  var token = _ref4.token,\n      hashtag = _ref4.hashtag;\n  var config = createHeaders(token);\n  var promise = axios.get(\"\".concat(BASE_URL, \"/hashtags/\").concat(hashtag, \"/posts\"), config);\n  return promise;\n}\n\nfunction getTrending(token) {\n  var config = createHeaders(token);\n  var promise = axios.get(\"\".concat(BASE_URL, \"/hashtags/trending\"), config);\n  return promise;\n}\n\nfunction toggleLike(_ref5) {\n  var token = _ref5.token,\n      postId = _ref5.postId,\n      status = _ref5.status;\n  var config = createHeaders(token);\n  var promise = axios.post(\"\".concat(BASE_URL, \"/posts/\").concat(postId, \"/\").concat(status), {}, config);\n  return promise;\n}\n\nfunction editPost(_ref6) {\n  var token = _ref6.token,\n      body = _ref6.body,\n      postId = _ref6.postId;\n  var config = createHeaders(token);\n  var promise = axios.put(\"\".concat(BASE_URL, \"/posts/\").concat(postId), body, config);\n  return promise;\n}\n\nfunction repost(_ref7) {\n  var token = _ref7.token,\n      postId = _ref7.postId;\n  var config = createHeaders(token);\n  var promise = axios.post(\"\".concat(BASE_URL, \"/posts/\").concat(postId, \"/share\"), {}, config);\n  return promise;\n}\n\nfunction getFollowingList(token) {\n  var config = createHeaders(token);\n  var promise = axios.get(\"\".concat(BASE_URL, \"/users/follows\"), config);\n  return promise;\n}\n\nfunction toggleFollow(_ref8) {\n  var token = _ref8.token,\n      userId = _ref8.userId,\n      status = _ref8.status;\n  var config = createHeaders(token);\n  var promise = axios.post(\"\".concat(BASE_URL, \"/users/\").concat(userId, \"/\").concat(status), {}, config);\n  return promise;\n}\n\nfunction getFollowingUsersPosts(token) {\n  var config = createHeaders(token);\n  var promise = axios.get(\"\".concat(BASE_URL, \"/following/posts\"), config);\n  return promise;\n}\n\nfunction getOlderMylikes(_ref9) {\n  var token = _ref9.token,\n      lastPostId = _ref9.lastPostId;\n  var config = createHeaders(token);\n  var promise = axios.get(\"\".concat(BASE_URL, \"/posts/liked?olderThan=\").concat(lastPostId), config);\n  return promise;\n}\n\nfunction getOlderUserPosts(_ref10) {\n  var token = _ref10.token,\n      userId = _ref10.userId,\n      lastPostId = _ref10.lastPostId;\n  var config = createHeaders(token);\n  var promise = axios.get(\"\".concat(BASE_URL, \"/users/\").concat(userId, \"/posts?olderThan=\").concat(lastPostId), config);\n  return promise;\n}\n\nfunction getOlderFollowingUsersPosts(_ref11) {\n  var token = _ref11.token,\n      lastPostId = _ref11.lastPostId;\n  var config = createHeaders(token);\n  var promise = axios.get(\"\".concat(BASE_URL, \"/following/posts?olderThan=\").concat(lastPostId), config);\n  return promise;\n}\n\nfunction getOlderHashtag(_ref12) {\n  var token = _ref12.token,\n      hashtag = _ref12.hashtag,\n      lastPostId = _ref12.lastPostId;\n  var config = createHeaders(token);\n  var promise = axios.get(\"\".concat(BASE_URL, \"/hashtags/\").concat(hashtag, \"/posts?olderThan=\").concat(lastPostId), config);\n  return promise;\n}\n\nexport { signUp, login, createPost, deletePost, getMylikes, getUserPosts, getHashtag, getTrending, toggleLike, getUserInfos, editPost, repost, getFollowingList, toggleFollow, getFollowingUsersPosts, getOlderMylikes, getOlderUserPosts, getOlderFollowingUsersPosts, getOlderHashtag };","map":{"version":3,"sources":["/home/cadu/Driven/Projetos/Projeto_11_Linkr/src/service/API.js"],"names":["axios","BASE_URL","createHeaders","token","config","headers","Authorization","signUp","body","promise","post","login","createPost","getMylikes","get","deletePost","id","delete","getUserPosts","userId","getUserInfos","getHashtag","hashtag","getTrending","toggleLike","postId","status","editPost","put","repost","getFollowingList","toggleFollow","getFollowingUsersPosts","getOlderMylikes","lastPostId","getOlderUserPosts","getOlderFollowingUsersPosts","getOlderHashtag"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nconst BASE_URL = 'https://mock-api.bootcamp.respondeai.com.br/api/v3/linkr'\n\nfunction createHeaders(token) {\n    const config = {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    }\n    return config;\n}\n\nfunction signUp(body) {\n    const promise = axios.post(`${BASE_URL}/sign-up`, body);\n    return promise;\n}\n\nfunction login(body) {\n    const promise = axios.post(`${BASE_URL}/sign-in`, body);\n    return promise;\n}\n\nfunction createPost({ token, body }) {\n    const config = createHeaders(token);\n    const promise = axios.post(`${BASE_URL}/posts`, body, config);\n    return promise;\n}\n\nfunction getMylikes(token){\n    const config = createHeaders(token);\n    const promise = axios.get(`${BASE_URL}/posts/liked`, config);\n    return promise;\n}\n\nfunction deletePost(token, id){\n    const config = createHeaders(token);\n    const promise = axios.delete(`${BASE_URL}/posts/${id}`, config);\n    return promise;\n}\n\nfunction getUserPosts({ token, userId }) {\n    const config = createHeaders(token);\n    const promise = axios.get(`${BASE_URL}/users/${userId}/posts`, config);\n    return promise;\n}\n\nfunction getUserInfos({ token, userId }) {\n    const config = createHeaders(token);\n    const promise = axios.get(`${BASE_URL}/users/${userId}`, config);\n    return promise;\n}\n\nfunction getHashtag({ token, hashtag }){\n    const config = createHeaders(token);\n    const promise = axios.get(`${BASE_URL}/hashtags/${hashtag}/posts`, config)\n    return promise;\n}\n\nfunction getTrending(token) {\n    const config = createHeaders(token);\n    const promise = axios.get(`${BASE_URL}/hashtags/trending`, config);\n    return promise;\n}\n\nfunction toggleLike({ token, postId, status }) {\n    const config = createHeaders(token);\n    const promise = axios.post(`${BASE_URL}/posts/${postId}/${status}`, {}, config);\n\treturn promise;\n}\n\n\nfunction editPost({ token, body, postId }) {\n    const config = createHeaders(token);\n    const promise = axios.put(`${BASE_URL}/posts/${postId}`, body, config);\n    return promise;\n}\n\nfunction repost({token, postId}) {\n    const config = createHeaders(token);\n    const promise = axios.post(`${BASE_URL}/posts/${postId}/share`, {}, config);\n    return promise;\n}\n\nfunction getFollowingList(token) {\n    const config = createHeaders(token);\n    const promise = axios.get(`${BASE_URL}/users/follows`, config);\n    return promise;\n}\n\nfunction toggleFollow({ token, userId, status }) {\n    const config = createHeaders(token);\n    const promise = axios.post(`${BASE_URL}/users/${userId}/${status}`, {}, config);\n    return promise;\n}\n\nfunction getFollowingUsersPosts(token) {\n    const config = createHeaders(token);\n    const promise = axios.get(`${BASE_URL}/following/posts`, config);\n    return promise;\n}\n\nfunction getOlderMylikes({ token, lastPostId }){\n    const config = createHeaders(token);\n    const promise = axios.get(`${BASE_URL}/posts/liked?olderThan=${lastPostId}`, config);\n    return promise;\n}\n\nfunction getOlderUserPosts({ token, userId, lastPostId }) {\n    const config = createHeaders(token);\n    const promise = axios.get(`${BASE_URL}/users/${userId}/posts?olderThan=${lastPostId}`, config);\n    return promise;\n}\n\nfunction getOlderFollowingUsersPosts({ token, lastPostId }) {\n    const config = createHeaders(token);\n    const promise = axios.get(`${BASE_URL}/following/posts?olderThan=${lastPostId}`, config);\n    return promise;\n}\n\nfunction getOlderHashtag({ token, hashtag, lastPostId }){\n    const config = createHeaders(token);\n    const promise = axios.get(`${BASE_URL}/hashtags/${hashtag}/posts?olderThan=${lastPostId}`, config)\n    return promise;\n}\n\nexport {\n    signUp,\n    login,\n    createPost,\n    deletePost,\n    getMylikes,\n    getUserPosts,\n    getHashtag,\n    getTrending,\n    toggleLike,\n    getUserInfos,\n    editPost,\n    repost,\n    getFollowingList,\n    toggleFollow,\n    getFollowingUsersPosts,\n    getOlderMylikes,\n    getOlderUserPosts,\n    getOlderFollowingUsersPosts,\n    getOlderHashtag\n}"]},"metadata":{},"sourceType":"module"}